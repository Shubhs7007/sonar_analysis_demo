name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm run build --if-present
      
 # test:
  #  runs-on: ubuntu-latest
   # needs: build

   # steps:
    #  - uses: actions/checkout@v4
     # - name: Use Node.js
      #  uses: actions/setup-node@v4
       # with:
        #  node-version: '20.x'
      #- run: npm install
      #- run: npm test 

  sonarqube:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  changelog:
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Changelog
        uses: mikepenz/release-changelog-builder-action@v2
        with:
          configuration: .github/release-changelog-builder-config.json

      - name: Commit and Push Changelog
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add CHANGELOG.md
          git commit -m 'Update changelog'
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  release_notes:
    runs-on: ubuntu-latest
    needs: changelog

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release Notes
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: release_notes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t your_dockerhub_username/your_repository_name:latest .

      - name: Push Docker image
        run: docker push your_dockerhub_username/your_repository_name:latest

  notifications:
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Send failure notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "CI/CD pipeline failed for ${{ github.repository }} on ${{ github.ref }}"

